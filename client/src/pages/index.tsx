import Head from 'next/head';
import { Button, Typography } from '@mui/material';
import { useRouter } from 'next/router';
import { Box } from '@mui/system';
import Layout from '@/components/Layout';
import { useUserStore } from '@/store/user';
import { withLogin } from '@/hoc/withLogin';
import { getMe } from '@/lib/apis/me';
import { useState } from 'react';

const Home = () => {
  const [user, setUser] = useUserStore((state) => [state.user, state.setUser]);
  const router = useRouter();
  const [username, setUsername] = useState('');

  const handleLogoutClick = async () => {
    setUser(null);
    // 실제 로그아웃을 구현 할땐 서버에 logout api 호출 시 클라이언트 쿠키를 다 지워주고
    // 클라이언트에서는 window.location.href를 통해 창 새로고침을 해주면
    // 자연스럽게 _app의 ssr로직을 다시 타게 되어서 쿠키가 비어진 채로 요청이 들어가게 됨.
  };

  const handleGrantAdminRole = async () => {
    // await postAdmin(4);
    // await postRefreshToken();
  };

  return (
    <>
      <Head>
        <title>jwt-project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main style={{ height: '100%' }}>
        <Layout>
          <Box>
            <Button color="inherit" onClick={() => router.push('/auth/login')}>
              로그인
            </Button>
            <Button
              color="secondary"
              variant="contained"
              disableElevation
              onClick={() => router.push('/auth/register')}
            >
              회원가입
            </Button>
          </Box>
          <Box>
            {user && <Typography>{user.username}</Typography>}
            <Button onClick={handleLogoutClick}>회원정보 가져오기</Button>
          </Box>
          {/* <Box>
            <Button onClick={handleGrantAdminRole}>어드민 권한 부여</Button>
          </Box> */}
        </Layout>
      </main>
    </>
  );
};

export default withLogin(Home);
